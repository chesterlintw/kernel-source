From: NeilBrown <neilb@suse.com>
Subject: KABI fix for "NFSv4.1: Fix up replays of interrupted requests"
Patch-mainline: Never, kabi
References: git-fixes

Mainline changes the 'client' arg to no longer be 'const'
This is only to inc/dec a refcount.
There is no cost is keeping it 'const' and casting that away just for
the refcount usage.

Acked-by: NeilBrown <neilb@suse.com>
Signed-off-by: Neil Brown <neilb@suse.com>

---
 fs/nfs/nfs4_fs.h  |    2 +-
 fs/nfs/nfs4proc.c |    5 +++--
 2 files changed, 4 insertions(+), 3 deletions(-)

--- a/fs/nfs/nfs4_fs.h
+++ b/fs/nfs/nfs4_fs.h
@@ -464,7 +464,7 @@ extern void nfs_increment_open_seqid(int
 extern void nfs_increment_lock_seqid(int status, struct nfs_seqid *seqid);
 extern void nfs_release_seqid(struct nfs_seqid *seqid);
 extern void nfs_free_seqid(struct nfs_seqid *seqid);
-extern int nfs4_setup_sequence(struct nfs_client *client,
+extern int nfs4_setup_sequence(const struct nfs_client *client,
 				struct nfs4_sequence_args *args,
 				struct nfs4_sequence_res *res,
 				struct rpc_task *task);
--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@ -932,11 +932,12 @@ void nfs4_sequence_attach_slot(struct nf
 	res->sr_slot = slot;
 }
 
-int nfs4_setup_sequence(struct nfs_client *client,
+int nfs4_setup_sequence(const struct nfs_client *client,
 			struct nfs4_sequence_args *args,
 			struct nfs4_sequence_res *res,
 			struct rpc_task *task)
 {
+	struct nfs_client *client_non_const = (void*)client;
 	struct nfs4_session *session = nfs4_get_session(client);
 	struct nfs4_slot_table *tbl  = client->cl_slot_tbl;
 	struct nfs4_slot *slot;
@@ -967,7 +968,7 @@ int nfs4_setup_sequence(struct nfs_clien
 
 		if (likely(!slot->interrupted))
 			break;
-		nfs4_sequence_process_interrupted(client,
+		nfs4_sequence_process_interrupted(client_non_const,
 				slot, task->tk_msg.rpc_cred);
 	}
 
