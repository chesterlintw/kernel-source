From: Myungho Jung <mhjungk@gmail.com>
Date: Tue, 22 Jan 2019 00:33:26 -0800
Subject: Bluetooth: hci_uart: Check if socket buffer is ERR_PTR in
 h4_recv_buf()
Patch-mainline: v5.1-rc1
Git-commit: 1dc2d785156cbdc80806c32e8d2c7c735d0b4721 (partial)
References: bsc#1133731 

h4_recv_buf() callers store the return value to socket buffer and
recursively pass the buffer to h4_recv_buf() without protection. So,
ERR_PTR returned from h4_recv_buf() can be dereferenced, if called again
before setting the socket buffer to NULL from previous error. Check if
skb is ERR_PTR in h4_recv_buf().

Reported-by: syzbot+017a32f149406df32703@syzkaller.appspotmail.com
Signed-off-by: Myungho Jung <mhjungk@gmail.com>
Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
Acked-by: Cho, Yu-Chen <acho@suse.com>
---
 drivers/bluetooth/hci_h4.c |    4 ++++
 1 file changed, 4 insertions(+)

--- a/drivers/bluetooth/hci_h4.c
+++ b/drivers/bluetooth/hci_h4.c
@@ -174,6 +174,10 @@ struct sk_buff *h4_recv_buf(struct hci_d
 	struct hci_uart *hu = hci_get_drvdata(hdev);
 	u8 alignment = hu->alignment;
 
+	/* Check for error from previous call */
+	if (IS_ERR(skb))
+		skb = NULL;
+
 	while (count) {
 		int i, len;
 
